name: Deploy on Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.4

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      # - name: Set environment variables for build
      #   run: |
      #     echo "VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}" >> .env.production.local
      #     echo "VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}" >> .env.production.local
      #   env:
      #     VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      #     VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4.3.3
        with:
          name: dist
          path: dist
          retention-days: 1

  deploy:
    needs: build
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only deploy on main branch

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.4

      - name: Download build artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: dist
          path: dist

      # - name: Set up SSH
      #   run: |
      #     mkdir -p ~/.ssh
      #     echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy.key
      #     chmod 600 ~/.ssh/deploy.key
      #     ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      #     cat > ~/.ssh/config << EOF
      #     Host biznet
      #       HostName ${{ secrets.SERVER_HOST }}
      #       User ${{ secrets.SERVER_USER }}
      #       IdentityFile ~/.ssh/deploy.key
      #       StrictHostKeyChecking yes
      #       ServerAliveInterval 60
      #       ServerAliveCountMax 3
      #     EOF
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      # - name: Verify SSH connection
      #   run: ssh biznet 'echo "SSH connection successful"'

      # - name: Deploy application
      #   run: |
      #     ssh biznet "
      #       sudo mkdir -p ${BUILD_DIR}
      #       sudo chown -R ${SERVER_USER}:www-data ${BUILD_DIR}
      #       sudo chmod -R 775 ${BUILD_DIR}
      #     "
      #     rsync -azP --delete ./dist/ biznet:${BUILD_DIR}/ --rsync-path="sudo rsync"
      #   env:
      #     BUILD_DIR: /var/www/abangbakso
      #     SERVER_USER: ${{ secrets.SERVER_USER }}

      # - name: Verify deployment
      #   run: curl -f -s "http://${{ secrets.DOMAIN_NAME }}" || exit 1

      - name: Cleanup
        if: always()
        run: rm -f ~/.ssh/deploy.key
